buildscript {
  ext {
    jasyptVersion = '1.9.2'
    jjwtVersion = '0.7.0'
    kotlinVersion = '1.1.51'
    orikaVersion = '1.5.1'
    restAssuredVersion = '3.0.3'
    springBootVersion = '2.0.0.BUILD-SNAPSHOT'
  }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
  }
}

configure(subprojects - project(':realworld-app') - project(':realworld-infra')) { project ->
  apply plugin: 'kotlin'
  apply plugin: 'kotlin-spring'
  apply plugin: 'io.spring.dependency-management'

  version = '0.0.1-SNAPSHOT'

  sourceCompatibility = 1.8
  compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
  }
  compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
  }

  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }

  dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    testCompile("org.springframework.boot:spring-boot-starter-test") {
      exclude group: 'junit', module: 'junit'
    }
    testCompile('io.projectreactor:reactor-test')
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testCompile('org.junit.jupiter:junit-jupiter-engine')
  }
}

project('realworld-app:web') {
  apply plugin: 'org.springframework.boot'

  dependencies {
    compile project(':realworld-domain')
    compile project(':realworld-infra:persistence')

    compile("ma.glasnost.orika:orika-core:${orikaVersion}")
    compile('org.flywaydb:flyway-core')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-webflux')

    runtime('com.h2database:h2')

    testCompile("io.rest-assured:rest-assured:${restAssuredVersion}")
    testCompile('org.springframework.security:spring-security-test')
  }
}

project('realworld-domain') {
  dependencies {
    compile("io.jsonwebtoken:jjwt:${jjwtVersion}")
    compile("org.jasypt:jasypt:${jasyptVersion}")
  }
}

project('realworld-infra:persistence') {
  dependencies {
    compile project(':realworld-domain')
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.2'
}
